{"version":3,"sources":["theme/theme.js","common/ThemeSwitcher/ThemeSwitcher.js","Components/Header/Header.styles.js","Components/Header/Header.js","api/api.js","common/LoadingSpinner/LoadingSpinner.js","common/getIdFromUrl/getIdFromUrl.js","Components/People/Person/PersonInfo.styles.js","Components/People/Person/PersonInfo.js","Components/People/Person/PersonFilms.styles.js","Components/People/Person/PersonFilms.js","common/BackButton/BackButton.js","Components/People/Person/Person.styles.js","Components/People/Person/Person.js","Components/ListsItem/ListsItem.styles.js","Components/ListsItem/ListsItem.js","Components/Films/Films.styles.js","Components/Films/Films.js","Components/Films/Film/FilmInfo.styles.js","Components/Films/Film/FilmInfo.js","Components/Films/Film/FilmCharacter.styles.js","Components/Films/Film/FilmCharacter.js","Components/Films/Film/Film.styles.js","Components/Films/Film/Film.js","Components/NavBar/NavBar.styles.js","Components/NavBar/NavBar.js","common/SearchBar/SearchBar.js","common/PageNumberBar/PageNumberBar.js","Components/People/People.styles.js","Components/People/People.js","App.js","serviceWorker.js","index.js"],"names":["darkTheme","bgColor","textColor","opacityBgColor","bgImage","lightTheme","StyledButton","styled","button","props","theme","ThemeSwitcher","type","onClick","setTheme","HeaderBox","div","StyledLink","Link","Background","Header","to","axiosInstance","axios","baseURL","peopleAPI","page","get","then","response","data","e","console","log","value","id","filmAPI","LoaderWrapper","Loader","LoadingSpinner","getIdFromUrl","url","match","PersonImage","img","DetailBox","StyledTextItem","StyledHeader","PersonInfo","item","imageSrc","src","alt","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","PersonFilms","useState","filmInfo","setFilmInfo","filmUrl","useEffect","result","title","withRouter","history","goBack","PersonStyleWrapper","PersonBox","personInfo","setPersonInfo","filmsLink","setFilmsLink","isLoading","setIsLoading","params","films","filmList","map","key","FilmsStyleWrapper","Films","setFilms","results","filmLinksList","FilmImage","FilmInfo","director","producer","release_date","opening_crawl","FilmCharacter","personUrl","FilmBox","FilmCharactersBox","peopleLink","setPeopleLink","characters","characterList","NavBarWrapper","NavBarButton","MenuSvg","svg","NavBarBlock","StyledNavLink","NavLink","NavBar","isShow","setIsShow","toggleNavBar","xmlns","width","viewBox","d","SearchBarWrapper","SearchBox","StyledInput","input","SearchBar","searchValue","onChange","filterOnChange","placeholder","cleanSearchValue","data-ember-extension","PageNumberBarWrapper","PageNumberBar","showPreviousPage","disabled","availablePage","previous","showNextPage","next","PeopleStyleWrapper","peopleList","setPeopleList","setSearchValue","setPage","setAvailablePage","setQueryString","action","currentPage","push","pathname","search","getDataFromApi","promise","personLinksList","event","target","App","className","basename","process","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.738f38db.chunk.js","sourcesContent":["export const darkTheme = {\n\tbgColor: '#212121',\n\ttextColor: '#FBC02D',\n\topacityBgColor: 'rgba(33, 33, 33, 0.7)',\n\tbgImage: 'https://i.pinimg.com/originals/6e/3a/d0/6e3ad0f9192c1578842f5f78facbd229.jpg'\n};\n\nexport const lightTheme = {\n\tbgColor: '#C5CAE9',\n\ttextColor: '#303F9F',\n\topacityBgColor: 'rgba(197, 202, 233, 0.7)',\n\tbgImage: 'https://c.wallhere.com/photos/86/4a/1920x1080_px_mountains_snow_Star_Wars_stormtrooper-847720.jpg!d'\n};\n\n\n","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\n\n\nconst ThemeSwitcher = (props) => {\n\n\tconst switchTheme = () => {\n\t\tprops.theme === 'theme-dark' ?\n\t\t\tprops.setTheme('theme-light') :\n\t\t\tprops.setTheme('theme-dark');\n\t};\n\n\treturn <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n\t\t<StyledButton type=\"checkbox\" onClick={switchTheme}> Switch theme </StyledButton>\n\t</ThemeProvider>;\n};\n\nconst StyledButton = styled.button`\n\t\tmargin: 22px;\n        padding: 10px;\n        font-size: 20px;\n        z-index: 3;\n        color: ${props => props.theme.textColor};\n        border: 1px solid ${props => props.theme.textColor};\n        border-radius: 13px;\n        background-color: ${props => props.theme.bgColor};\n        &:hover {\n            background-color: ${props => props.theme.textColor};\n            color: ${props => props.theme.bgColor};\n        }\n        @media (max-width: 1000px){ \n\t\t\tmargin: 0;\n            padding: 10px 2px;\n    \t\tfont-size: 14px;   \n        }    \n    `;\n\nexport default ThemeSwitcher;\n","import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nexport const HeaderBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 15px;\n    height: 10vh;\n\tbackground-color: ${props => props.theme.bgColor};\n\tcolor: ${props => props.theme.textColor};\n\tborder-bottom: 1px solid ${props => props.theme.textColor};\n\t    &h1 {\n\t        margin: 0;\n\t    } \n\t`;\n\nexport const StyledLink = styled(Link)`\n        margin: 0;\n        text-decoration: none;\n        font-size: 2.5em;\n        font-weight: 900;\n        color: ${props => props.theme.textColor};\n         @media (max-width: 1000px){ \n            margin: 0 20px 0 60px;\n\t\t\tfont-size: 1.5em;\n\t\t\tfont-weight: 700;\n        }\n        \n    `;\n\nexport const Background = styled.div`\n        position: fixed;\n        height: 100%;\n        width: 100%;\n        z-index: -1;\n        background-repeat: no-repeat; \n        background-size: cover;\n        background-image: url(\"${props => props.theme.bgImage}\"); \n`;\n","import React from 'react';\nimport {ThemeProvider} from 'styled-components';\nimport ThemeSwitcher from '../../common/ThemeSwitcher/ThemeSwitcher';\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\nimport {HeaderBox, StyledLink, Background} from \"./Header.styles\";\n\n\nconst Header = (props) => {\n\n\treturn <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n\t\t<HeaderBox>\n\t\t\t<StyledLink to='/'>Star Wars Wiki</StyledLink>\n\t\t\t<ThemeSwitcher setTheme={props.setTheme} theme={props.theme}/>\n\t\t</HeaderBox>\n\t\t<Background/>\n\t</ThemeProvider>;\n};\n\nexport default Header;\n","import * as axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://swapi.dev/api'\n},);\n\n\nexport const peopleAPI = {\n    getPeoples(page) {\n        try {\n            return axiosInstance.get(`/people/?page=${page}`)\n                .then(response => response.data);\n        } catch (e) {\n            console.log('Error: ', e);\n        }\n    },\n    getFilteredPeoples(value, page) {\n        try {\n            return axiosInstance.get(`/people/?search=${value}&page=${page}`)\n                .then(response => response.data);\n        } catch (e) {\n            console.log('Error: ', e);\n        }\n    },\n    getCurrentPerson(id) {\n        try {\n            return axiosInstance.get(`/people/${id}`)\n                .then(response => response.data);\n        } catch (e) {\n            console.log('Error: ', e);\n        }\n    }\n};\n\nexport const filmAPI = {\n    getFilms() {\n        try {\n            return axiosInstance.get('/films')\n                .then(response => response.data);\n        } catch (e) {\n            console.log('Error: ', e);\n        }\n    },\n    getCurrentFilm(id) {\n        try {\n            return axiosInstance.get(`/films/${id}`)\n                .then(response => response.data);\n        } catch (e) {\n            console.log('Error: ', e);\n        }\n    }\n};\n\n\n","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\n\n\nconst LoadingSpinner = (props) => {\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <LoaderWrapper>\n            <Loader></Loader>\n        </LoaderWrapper>\n    </ThemeProvider>\n};\n\nconst LoaderWrapper = styled.div`\n    height: 90vh;\n    `;\n\nconst Loader = styled.div`display: inline-block;\n    display: block;\n    margin: 100px auto 0 auto;\n    width: 200px;\n    height: 200px;\n    &:after {\n    content: \" \";\n    display: block;\n    width: 128px;\n    height: 128px;\n    margin: 16px;\n    border-radius: 50%;\n    border: 12px solid ${props => props.theme.textColor};\n    border-color: ${props => props.theme.textColor} transparent ${props => props.theme.textColor} transparent;\n    animation: lds-dual-ring 1.2s linear infinite;\n    @keyframes lds-dual-ring {\n        0% {\n        transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n`;\n\nexport default LoadingSpinner;\n","const getIdFromUrl = (url) => {\n        return url && url.match(/[0-9]+/g);\n};\n\nexport default getIdFromUrl;\n","import styled from 'styled-components';\n\nexport const PersonImage = styled.img`\n        justify-self: right;\n        width: 300px;\n        margin: 30px;\n        border-radius: 20px;\n        @media (max-width: 1000px){ \n            justify-self: center;\n            width: 200px;\n            margin: 20px 0 0 0;\n        }\n        \n    `;\n\nexport const DetailBox = styled.div`\n        width: 300px;\n        margin-top: 30px;\n        @media (max-width: 1000px){ \n            margin: 20px;\n            width: 200px;\n        }  \n    `;\n\nexport const StyledTextItem = styled.div`\n        display: block;\n        width: 300px;\n        padding-bottom: 20px;\n        text-transform: uppercase;\n        font-size: 20px;\n        @media (max-width: 1000px){ \n            width: 250px;\n        }  \n    \n    `;\n\nexport const StyledHeader = styled(StyledTextItem)`\n        font-size: 30px;\n        padding-bottom: 30px;\n    `;\n","import React from \"react\";\nimport getIdFromUrl from \"../../../common/getIdFromUrl/getIdFromUrl\";\nimport {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\nimport {DetailBox, PersonImage, StyledHeader, StyledTextItem} from \"./PersonInfo.styles\";\n\nconst PersonInfo = ({item, theme}) => {\n    const imageSrc = item.url && `https://starwars-visualguide.com/assets/img/characters/${getIdFromUrl(item.url)}.jpg`;\n\n    return <ThemeProvider theme={theme === 'theme-light' ? lightTheme : darkTheme}>\n        {imageSrc && <PersonImage src={imageSrc} alt={item.name}/>}\n        <DetailBox>\n            <StyledHeader>{item.name}</StyledHeader>\n            <StyledTextItem>height - {item.height}</StyledTextItem>\n            <StyledTextItem>mass - {item.mass}</StyledTextItem>\n            <StyledTextItem>hair color - {item.hair_color}</StyledTextItem>\n            <StyledTextItem>skin color - {item.skin_color}</StyledTextItem>\n            <StyledTextItem>eye color - {item.eye_color}</StyledTextItem>\n            <StyledTextItem>birth year - {item.birth_year}</StyledTextItem>\n            <StyledTextItem>gender - {item.gender}</StyledTextItem>\n        </DetailBox>\n    </ThemeProvider>\n};\n\nexport default PersonInfo;\n","import {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n    display: flex;\n    justify-content: center;\n    margin: 15px auto 15px auto;\n    width: 450px;\n    padding: 10px;\n    font-weight: 900;\n    cursor: pointer;\n    color: ${props => props.theme.textColor};\n    text-decoration: none;\n    font-size: 20px;\n    color: ${props => props.theme.textColor};\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 13px;\n    background-color: ${props => props.theme.bgColor};\n        &:hover {\n            background-color: ${props => props.theme.textColor};\n            color: ${props => props.theme.bgColor};\n\t  }\n\t@media (max-width: 1000px){ \n            width: 200px;\n        }  \n`;\n","import React, {useEffect, useState} from 'react';\nimport {filmAPI} from \"../../../api/api\";\nimport getIdFromUrl from \"../../../common/getIdFromUrl/getIdFromUrl\";\nimport {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\nimport {StyledLink} from \"./PersonFilms.styles\";\n\nconst PersonFilms = (props) => {\n    const [filmInfo, setFilmInfo] = useState({});\n    const [id] = useState(getIdFromUrl(props.filmUrl));\n\n\n    useEffect(() => {\n        filmAPI.getCurrentFilm(id)\n            .then(result => setFilmInfo(result));\n    }, [id, setFilmInfo]);\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <StyledLink to={`/films/${id}`}>\n            {filmInfo.title}\n        </StyledLink>\n    </ThemeProvider>\n};\n\nexport default PersonFilms;\n","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {withRouter} from \"react-router-dom\";\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\n\nconst BackButton = (props) => {\n        return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <StyledButton onClick={props.history.goBack}>Back</StyledButton>\n    </ThemeProvider>\n};\n\nconst StyledButton = styled.button`\n    width: 150px;\n        padding: 10px;\n        margin-bottom: 30px;\n        font-size: 20px;\n        color: ${props => props.theme.textColor};\n        border: 1px solid ${props => props.theme.textColor};\n        border-radius: 13px;\n        background-color: ${props => props.theme.bgColor};\n        &:hover {\n            background-color: ${props => props.theme.textColor};\n            color: ${props => props.theme.bgColor};\n        }\n    `;\n\nexport default withRouter(BackButton);\n","import styled from \"styled-components\";\n\nexport const PersonStyleWrapper = styled.div`\n    top: 10vh;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    padding: 30px;\n`;\n\nexport const PersonBox = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    margin-bottom: 30px;\n    padding: 20px;\n    color: ${props => props.theme.textColor};\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 13px;\n    background-color: ${props => props.theme.opacityBgColor};\n    @media (max-width: 1000px){ \n            grid-template-columns: 1fr;\n            padding: 10px 0;\n    }\n`;\n","import React, {useEffect, useState} from 'react';\nimport {peopleAPI} from '../../../api/api';\nimport LoadingSpinner from '../../../common/LoadingSpinner/LoadingSpinner';\nimport PersonInfo from \"./PersonInfo\";\nimport {withRouter} from \"react-router-dom\";\nimport PersonFilms from \"./PersonFilms\";\nimport BackButton from \"../../../common/BackButton/BackButton\";\nimport {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\nimport {PersonBox, PersonStyleWrapper} from \"./Person.styles\";\n\nconst Person = (props) => {\n    const [personInfo, setPersonInfo] = useState([]);\n    const [filmsLink, setFilmsLink] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true);\n        peopleAPI.getCurrentPerson(props.match.params.id)\n            .then(result => {\n                let {films, ...personInfo} = result;\n                setPersonInfo(personInfo);\n                setFilmsLink(films);\n                setIsLoading(false);\n            });\n    }, [props.match.params.id, setPersonInfo, setFilmsLink, setIsLoading]);\n\n\n    const filmList = filmsLink.map(item => <PersonFilms filmUrl={item} key={item} theme={props.theme}/>);\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <PersonStyleWrapper>\n            <BackButton theme={props.theme}/>\n            {\n                isLoading\n                    ? <LoadingSpinner theme={props.theme}/>\n                    : <>\n                        <PersonBox>\n                            <PersonInfo item={personInfo} theme={props.theme}/>\n                        </PersonBox>\n                        <PersonBox>\n                            {filmList}\n                        </PersonBox>\n                    </>\n            }\n        </PersonStyleWrapper>\n    </ThemeProvider>;\n};\n\n\nexport default withRouter(Person);\n","import {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n    display: flex;\n    justify-content: center;\n    margin: 0 auto 15px auto;\n    width: 450px;\n    padding: 10px;\n    font-weight: 900;\n    cursor: pointer;\n    color: ${props => props.theme.textColor};\n    text-decoration: none;\n    font-size: 20px;\n    color: ${props => props.theme.textColor};\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 13px;\n    background-color: ${props => props.theme.bgColor};\n    &:hover {\n        background-color: ${props => props.theme.textColor};\n        color: ${props => props.theme.bgColor};\n\t  }\n\t  @media (max-width: 1000px){ \n            width: 220px;\n        }\n`;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\nimport {StyledLink} from \"./ListsItem.styles\";\n\n\nconst ListsItem = ({name, id, match, theme}) => {\n\n\n    return <ThemeProvider theme={theme === 'theme-light' ? lightTheme : darkTheme}>\n        <StyledLink to={match.url + `/${id}`}>\n            {name}\n        </StyledLink>\n    </ThemeProvider>\n};\n\nexport default withRouter(ListsItem);\n","import styled from \"styled-components\";\n\nexport const FilmsStyleWrapper = styled.div`\n    position: absolute;\n    top: 10vh;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    padding-top: 15px;\n    @media (max-width: 1000px){ \n            position: relative;\n            top: 0; \n            height: 90vh;\n         }\n`;\n\n","import React, {useEffect, useState} from 'react';\nimport {filmAPI} from \"../../api/api\";\nimport ListsItem from \"../ListsItem/ListsItem\";\nimport getIdFromUrl from \"../../common/getIdFromUrl/getIdFromUrl\";\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\nimport {ThemeProvider} from \"styled-components\";\nimport {FilmsStyleWrapper} from \"./Films.styles\";\n\nconst Films = (props) => {\n    const [films, setFilms] = useState([]);\n\n\n    useEffect(() => {\n        filmAPI.getFilms()\n            .then(result => setFilms(result.results))\n    }, [setFilms]);\n\n\n    const filmLinksList = films.map(item => (\n        <ListsItem name={item.title} id={getIdFromUrl(item.url)} key={item.title} theme={props.theme}/>));\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <FilmsStyleWrapper>\n            {filmLinksList}\n        </FilmsStyleWrapper>\n    </ThemeProvider>\n};\n\nexport default Films;\n","import styled from \"styled-components\";\n\nexport const FilmImage = styled.img`\n        justify-self: center;\n        width: 300px;\n        margin: 30px;\n        border-radius: 20px;\n        @media (max-width: 1000px){ \n            justify-self: center;\n            width: 200px;\n            margin: 20px 0 0 0;\n        }\n    `;\n\nexport const DetailBox = styled.div`\n        margin-top: 30px;\n         @media (max-width: 1000px){ \n            margin: 20px;\n            width: 200px;\n        }  \n    `;\n\nexport const StyledTextItem = styled.div`\n        display: block;\n        padding-bottom: 20px;\n        text-transform: uppercase;\n        font-size: 20px;\n        @media (max-width: 1000px){ \n            width: 250px;\n        } \n    `;\n\nexport const StyledHeader = styled(StyledTextItem)`\n        font-size: 30px;\n        padding-bottom: 30px;\n    `;\n\n","import React from \"react\";\nimport getIdFromUrl from \"../../../common/getIdFromUrl/getIdFromUrl\";\nimport {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\nimport {DetailBox, FilmImage, StyledHeader, StyledTextItem} from \"./FilmInfo.styles\";\n\nconst FilmInfo = ({item, theme}) => {\n    const imageSrc = item.url && `https://starwars-visualguide.com/assets/img/films/${getIdFromUrl(item.url)}.jpg`;\n\n    return <ThemeProvider theme={theme === 'theme-light' ? lightTheme : darkTheme}>\n        {imageSrc && <FilmImage src={imageSrc} alt={item.name}/>}\n        <DetailBox>\n            <StyledHeader>{item.title}</StyledHeader>\n            <StyledTextItem>director - {item.director}</StyledTextItem>\n            <StyledTextItem>producer - {item.producer}</StyledTextItem>\n            <StyledTextItem>release data - {item.release_date}</StyledTextItem>\n            <StyledTextItem>description: {item.opening_crawl}</StyledTextItem>\n        </DetailBox>\n    </ThemeProvider>\n};\n\nexport default FilmInfo;\n","import {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n    display: flex;\n    justify-content: center;\n    margin: 15px auto 15px auto;\n    width: 450px;\n    padding: 10px;\n    font-weight: 900;\n    cursor: pointer;\n    color: ${props => props.theme.textColor};\n    text-decoration: none;\n    font-size: 20px;\n    color: ${props => props.theme.textColor};\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 13px;\n    background-color: ${props => props.theme.bgColor};\n        &:hover {\n            background-color: ${props => props.theme.textColor};\n            color: ${props => props.theme.bgColor};\n\t  }\n\t@media (max-width: 1000px){ \n            width: 200px;\n        }    \n`;\n","import React, {useEffect, useState} from 'react';\nimport {peopleAPI} from \"../../../api/api\";\nimport getIdFromUrl from \"../../../common/getIdFromUrl/getIdFromUrl\";\nimport {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\nimport {StyledLink} from \"./FilmCharacter.styles\";\n\nconst FilmCharacter = (props) => {\n    const [personInfo, setPersonInfo] = useState({});\n    const [id] = useState(getIdFromUrl(props.personUrl));\n\n    useEffect(() => {\n        peopleAPI.getCurrentPerson(id)\n            .then(result => {\n                setPersonInfo(result)});\n    }, [id, setPersonInfo]);\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <StyledLink to={`/people/${id}`}>\n            {personInfo.name}\n        </StyledLink>\n    </ThemeProvider>\n};\n\nexport default FilmCharacter;\n","import styled from \"styled-components\";\n\nexport const FilmsStyleWrapper = styled.div`\n    top: 10vh;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    padding: 30px;\n`;\n\n    export const FilmBox = styled.div`\n    display: grid;\n    grid-template-columns: 400px 1fr;\n    margin-bottom: 30px;\n    padding: 20px;\n    color: ${props => props.theme.textColor};\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 13px;\n    background-color: ${props => props.theme.opacityBgColor};\n    @media (max-width: 1000px){ \n            grid-template-columns: 1fr;\n            padding: 10px 0;\n    }\n`;\n\nexport const FilmCharactersBox = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    margin-bottom: 30px;\n    padding: 20px;\n    color: ${props => props.theme.textColor};\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 13px;\n    background-color: ${props => props.theme.opacityBgColor};\n    @media (max-width: 1000px){ \n            grid-template-columns: 1fr;\n            padding: 10px 0;\n    }\n`;\n","import React, {useEffect, useState} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {filmAPI} from \"../../../api/api\";\nimport LoadingSpinner from \"../../../common/LoadingSpinner/LoadingSpinner\";\nimport FilmInfo from \"./FilmInfo\";\nimport FilmCharacter from \"./FilmCharacter\";\nimport {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\nimport BackButton from \"../../../common/BackButton/BackButton\";\nimport {FilmBox, FilmsStyleWrapper, FilmCharactersBox} from \"./Film.styles\";\n\nconst Film = (props) => {\n    const [filmInfo, setFilmInfo] = useState([]);\n    const [peopleLink, setPeopleLink] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true);\n        filmAPI.getCurrentFilm(props.match.params.id)\n            .then(result => {\n                let {characters, ...filmInfo} = result;\n                setFilmInfo(filmInfo);\n                setPeopleLink(characters);\n                setIsLoading(false);\n            });\n    }, [props.match.params.id, setFilmInfo, setPeopleLink, setIsLoading]);\n\n\n    const characterList = peopleLink.map(item => <FilmCharacter personUrl={item} key={item} theme={props.theme}/>);\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <FilmsStyleWrapper>\n            <BackButton theme={props.theme}/>\n            {\n                isLoading\n                    ? <LoadingSpinner theme={props.theme}/>\n                    : <>\n                        <FilmBox>\n                            <FilmInfo item={filmInfo}/>\n                        </FilmBox>\n                        <FilmCharactersBox>\n                            {characterList}\n                        </FilmCharactersBox>\n                    </>\n            }\n        </FilmsStyleWrapper>\n    </ThemeProvider>;\n};\n\nexport default withRouter(Film);\n\n","import styled from 'styled-components';\nimport {NavLink} from \"react-router-dom\";\n\nexport const NavBarWrapper = styled.div`\n        position: absolute;\n         top: 0;\n        left: 0;\n        width: 10vh;\n        height: 10vh;\n       background-color: ${props => props.theme.bgColor};\n       z-index: 2;\n       border-bottom: 1px solid ${props => props.theme.textColor};\n    `;\n\nexport const NavBarButton = styled.div`\n        margin: calc((10vh - 42px)/2);\n        width: 42px;\n        color: ${props => props.theme.textColor};\n        cursor: pointer;\n\n    `;\n\nexport const MenuSvg = styled.svg`\n    fill: ${props => props.theme.textColor};\n    `;\n\nexport const NavBarBlock = styled.div`\n        display: grid;\n        width: 300px;\n        grid-template-columns: 1fr;\n               background-color: ${props => props.theme.bgColor};\n        \n    `;\n\nexport const StyledNavLink = styled(NavLink)`\ndisplay: flex;\njustify-content: center;\n        padding: 15px 10px;\n        text-decoration: none;\n        color: ${props => props.theme.textColor};\n        font-size: 20px;\n        border-bottom: 1px solid ${props => props.theme.textColor};\n        &:hover {\n            background-color: ${props => props.theme.textColor};\n            color: ${props => props.theme.bgColor};\n        }\n        &.active {\n            background-color: ${props => props.theme.textColor};\n            color: ${props => props.theme.bgColor};\n        }\n    `;\n","import React, {useState} from 'react';\nimport {MenuSvg, NavBarBlock, NavBarButton, NavBarWrapper, StyledNavLink} from \"./NavBar.styles\";\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\nimport {ThemeProvider} from \"styled-components\";\n\nconst NavBar = (props) => {\n    const [isShow, setIsShow] = useState(false);\n    const toggleNavBar = () => setIsShow(!isShow);\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <NavBarWrapper>\n            <NavBarButton onClick={toggleNavBar}>\n                <MenuSvg xmlns=\"http://www.w3.org/2000/svg\" width=\"42\" height=\"42\" viewBox=\"0 0 18 18\">\n                    <path d=\"M2 13.5h14V12H2v1.5zm0-4h14V8H2v1.5zM2 4v1.5h14V4H2z\"/>\n                </MenuSvg>\n            </NavBarButton>\n            {isShow &&\n            <NavBarBlock isShow>\n\n                <StyledNavLink onClick={toggleNavBar} to={'/people'}>People</StyledNavLink>\n\n                <StyledNavLink onClick={toggleNavBar} to={'/films'}>Films</StyledNavLink>\n\n            </NavBarBlock>\n            }\n        </NavBarWrapper>\n    </ThemeProvider>;\n};\n\n\nexport default NavBar;\n","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from '../../theme/theme';\n\n\nconst SearchBar = (props) => {\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <SearchBarWrapper>\n            <SearchBox>\n                <StyledInput type=\"text\" value={props.searchValue} onChange={props.filterOnChange}\n                             placeholder={props.placeholder}/>\n                <StyledButton onClick={props.cleanSearchValue}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n                         viewBox=\"0 0 48 48\" data-ember-extension=\"1\">\n                        <path d=\"M38 12.83L35.17 10 24 21.17 12.83 10\n                    10 12.83 21.17 24 10 35.17 12.83 38 24 26.83\n                    35.17 38 38 35.17 26.83 24z\"/>\n                    </svg>\n                </StyledButton>\n            </SearchBox>\n        </SearchBarWrapper>\n    </ThemeProvider>;\n};\n\nconst SearchBarWrapper = styled.div`\n\tdisplay: flex;\n    justify-content: center;\n    color: ${props => props.theme.textColor};\n    padding: 30px;\n\t`;\n\nconst SearchBox = styled.div`\n\tdisplay: grid;\n    grid-template-columns: 1fr 24px;\n    padding: 0 8px;\n     width: 450px;\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 30px;\n    height: 36px;\n    background-color: ${props => props.theme.bgColor};\n\t`;\n\nconst StyledInput = styled.input`\n    width: 100%;\n    height: 100%;\n    padding-left: 15px;\n    outline: none;\n    -webkit-appearance: none;\n    border: none;\n    font-size: 24px;\n    font-weight: 900;\n    background-color: inherit;\n    color: ${props => props.theme.textColor};\n\tborder-radius: 30px;\n    align-self: center;\n    justify-self: center;\n\t&::placeholder {\n\tbackground-color: inherit;\n    color: ${props => props.theme.textColor};\n    font-weight: 100;\n\t}\n`;\n\nconst StyledButton = styled.button`\n\tdisplay: flex;\n    fill: ${props => props.theme.textColor};\n    margin-top: 6px;\n\t background: none;\n    color: inherit;\n    border: none;\n    padding: 0;\n    cursor: pointer;\n    outline: inherit;\n\t`;\n\nexport default SearchBar;\n","import React from 'react';\nimport styled, {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\n\nconst PageNumberBar = (props) => {\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <PageNumberBarWrapper>\n            <StyledButton onClick={props.showPreviousPage} disabled={!props.availablePage.previous}\n            >Previous</StyledButton>\n            <StyledButton onClick={props.showNextPage} disabled={!props.availablePage.next}\n            >Next</StyledButton>\n        </PageNumberBarWrapper>\n    </ThemeProvider>;\n};\n\nconst PageNumberBarWrapper = styled.div`\n        display: flex;\n        justify-content: space-between;\n        width: 450px;\n        margin: 0 auto;\n        padding-bottom: 30px;\n        @media (max-width: 1000px){ \n            width: auto;\n            justify-content: space-around;\n        }\n    `;\n\nconst StyledButton = styled.button`\n        padding: 10px 20px;\n        width: 220px;\n        font-size: 20px;\n        color: ${props => props.theme.bgColor};\n        border: 1px solid ${props => props.theme.textColor};\n        border-radius: 13px;\n        background-color: ${props => props.theme.textColor};\n        cursor: pointer; \n        &:hover {\n            background-color: ${props => props.theme.bgColor};\n            color: ${props => props.theme.textColor};\n        }\n        &:disabled {\n        background-color: #757575;\n        }\n        @media (max-width: 1000px){ \n            width: 120px;\n        }\n    `;\n\n\nexport default PageNumberBar;\n","import styled from 'styled-components';\n\nexport const PeopleStyleWrapper = styled.div`\n        position: absolute;\n        top: 10vh;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        @media (max-width: 1000px){ \n            position: relative;\n            top: 0; \n            min-height: 90vh;\n         }\n`;\n","import React, {useEffect, useState} from 'react';\nimport {peopleAPI} from '../../api/api';\nimport LoadingSpinner from '../../common/LoadingSpinner/LoadingSpinner';\nimport SearchBar from '../../common/SearchBar/SearchBar';\nimport PageNumberBar from '../../common/PageNumberBar/PageNumberBar';\nimport ListsItem from '../ListsItem/ListsItem';\nimport getIdFromUrl from '../../common/getIdFromUrl/getIdFromUrl';\nimport {withRouter} from 'react-router-dom';\nimport {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\nimport {PeopleStyleWrapper} from \"./People.styles\";\n\n\nconst People = (props) => {\n    const [peopleList, setPeopleList] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n    const [page, setPage] = useState(1);\n    const [availablePage, setAvailablePage] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    const peopleFilterOnChange = (event) => {\n        setSearchValue(event.target.value);\n        setQueryString(1, event.target.value);\n    };\n\n    const cleanSearchValue = () => {\n        setSearchValue('');\n        setQueryString(1, null);\n    };\n\n    const showPreviousPage = () => {\n        searchValue && setPage(page - 1);\n        setQueryString(page, searchValue, -1);\n    };\n\n    const showNextPage = () => {\n        searchValue && setPage(+page + 1);\n        setQueryString(page, searchValue, 1);\n    };\n\n    const setQueryString = (page, searchValue, action = null) => {\n        let currentPage = action ? +page + action : page;\n        setPage(currentPage);\n        props.history.push({\n            pathname: '/people',\n            search: `?page=${currentPage}${searchValue ? ('&search=' + searchValue) : ''}`\n        });\n    };\n    \n    const getDataFromApi = (promise) => {\n        promise.then(result => {\n            let {previous, next, results} = result;\n            setPeopleList(results);\n            setAvailablePage({next, previous});\n            setIsLoading(false);\n        });\n    };\n\n\n    useEffect(() => {\n        setIsLoading(true);\n        // setQueryString(page, searchValue);\n        searchValue ?\n            getDataFromApi(peopleAPI.getFilteredPeoples(searchValue, page))\n            : getDataFromApi(peopleAPI.getPeoples(page));\n    }, [page, searchValue, setPeopleList, setIsLoading]);\n\n\n    const personLinksList = peopleList.map(item => (\n        <ListsItem name={item.name} id={getIdFromUrl(item.url)} key={item.name} theme={props.theme}/>));\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <PeopleStyleWrapper>\n            <SearchBar searchValue={searchValue} theme={props.theme}\n                       filterOnChange={peopleFilterOnChange} cleanSearchValue={cleanSearchValue}\n                       placeholder={'Search by name'}/>\n            <div>\n                {\n                    isLoading\n                        ? <LoadingSpinner theme={props.theme}/>\n                        : personLinksList\n                }\n                <PageNumberBar availablePage={availablePage}\n                               theme={props.theme}\n                               showPreviousPage={showPreviousPage}\n                               showNextPage={showNextPage}/>\n            </div>\n        </PeopleStyleWrapper>\n    </ThemeProvider>;\n};\n\nexport default withRouter(People);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Redirect, Route } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport Person from './Components/People/Person/Person';\nimport Films from './Components/Films/Films';\nimport Film from './Components/Films/Film/Film';\nimport NavBar from './Components/NavBar/NavBar';\nimport People from './Components/People/People';\n\n\nfunction App() {\n\tconst [theme, setTheme] = useState('theme-light');\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Header setTheme={setTheme} theme={theme}/>\n\t\t\t\t<NavBar theme={theme}/>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Redirect to=\"/people\" />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/people' exact render={() => <People theme={theme}/>}/>\n\t\t\t\t\t<Route path='/people/:id' exact render={() => <Person  theme={theme}/>}/>\n\t\t\t\t\t<Route path='/films' exact render={() => <Films  theme={theme}/>}/>\n\t\t\t\t\t<Route path='/films/:id' exact render={() => <Film  theme={theme}/>}/>\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\n\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}